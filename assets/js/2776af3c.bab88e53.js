"use strict";(self.webpackChunkops_cookbook=self.webpackChunkops_cookbook||[]).push([[480],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return f}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),d=l(n),f=i,m=d["".concat(c,".").concat(f)]||d[f]||u[f]||o;return n?r.createElement(m,s(s({ref:t},p),{},{components:n})):r.createElement(m,s({ref:t},p))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,s=new Array(o);s[0]=d;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a.mdxType="string"==typeof e?e:i,s[1]=a;for(var l=2;l<o;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4403:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return a},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return p},default:function(){return d}});var r=n(7462),i=n(3366),o=(n(7294),n(3905)),s=["components"],a={sidebar_position:8},c="SNS Notifications",l={unversionedId:"aws-recipes/sns-notifications",id:"aws-recipes/sns-notifications",isDocsHomePage:!1,title:"SNS Notifications",description:"Connect your CloudWatch Alarms to an SNS topic then add subscriptions to get notified.",source:"@site/docs/aws-recipes/sns-notifications.md",sourceDirName:"aws-recipes",slug:"/aws-recipes/sns-notifications",permalink:"/ops-cookbook/docs/aws-recipes/sns-notifications",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/aws-recipes/sns-notifications.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"ECS CloudWatch",permalink:"/ops-cookbook/docs/aws-recipes/ecs-cloudwatch"},next:{title:"Trello Notifications",permalink:"/ops-cookbook/docs/aws-recipes/trello-notifications"}},p=[{value:"Setup a Simple Notification Service Topic",id:"setup-a-simple-notification-service-topic",children:[]},{value:"Configure an email address",id:"configure-an-email-address",children:[]},{value:"Subscribe the email address to the topic",id:"subscribe-the-email-address-to-the-topic",children:[]}],u={toc:p};function d(e){var t=e.components,n=(0,i.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"sns-notifications"},"SNS Notifications"),(0,o.kt)("p",null,"Connect your CloudWatch Alarms to an SNS topic then add subscriptions to get notified."),(0,o.kt)("h2",{id:"setup-a-simple-notification-service-topic"},"Setup a Simple Notification Service Topic"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'resource "aws_sns_topic" "sns_technical_alerts" {\n  name = "${terraform.workspace}-technical-alerts"\n  provider = aws.eu-west-2\n}\n\nresource "aws_sns_topic_policy" "sns_technical_alerts_policy" {\n  arn    = aws_sns_topic.sns_technical_alerts.arn\n  policy = data.aws_iam_policy_document.sns_technical_alerts_policy_document.json\n  provider = aws.eu-west-2\n}\n\ndata "aws_iam_policy_document" "sns_technical_alerts_policy_document" {\n  policy_id = "__default_policy_ID"\n\n  statement {\n    actions = [\n      "SNS:Subscribe",\n      "SNS:SetTopicAttributes",\n      "SNS:RemovePermission",\n      "SNS:Receive",\n      "SNS:Publish",\n      "SNS:ListSubscriptionsByTopic",\n      "SNS:GetTopicAttributes",\n      "SNS:DeleteTopic",\n      "SNS:AddPermission",\n    ]\n\n    condition {\n      test     = "StringEquals"\n      variable = "AWS:SourceOwner"\n\n      values = [\n        var.aws_account_number,\n      ]\n    }\n\n    effect = "Allow"\n\n    principals {\n      type        = "AWS"\n      identifiers = ["*"]\n    }\n\n    resources = [\n      aws_sns_topic.sns_technical_alerts.arn\n    ]\n\n    sid = "__default_statement_ID"\n  }\n}\n')),(0,o.kt)("h2",{id:"configure-an-email-address"},"Configure an email address"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'variable "alert_email_address" {\n  sensitive   = true\n  type        = string\n  description = "Email Address subscribed to alerts"\n  default     = ""\n}\n')),(0,o.kt)("h2",{id:"subscribe-the-email-address-to-the-topic"},"Subscribe the email address to the topic"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'resource "aws_sns_topic_subscription" "sns_technical_alerts_subscription" {\n  topic_arn = aws_sns_topic.sns_technical_alerts.arn\n  protocol  = "email"\n  endpoint  = var.alert_email_address\n  provider = aws.eu-west-2\n}\n')))}d.isMDXComponent=!0}}]);