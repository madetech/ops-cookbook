"use strict";(self.webpackChunkops_cookbook=self.webpackChunkops_cookbook||[]).push([[926],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),s=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return o.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=r,f=d["".concat(c,".").concat(m)]||d[m]||u[m]||a;return n?o.createElement(f,i(i({ref:t},p),{},{components:n})):o.createElement(f,i({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var s=2;s<a;s++)i[s]=n[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},695:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return p},default:function(){return d}});var o=n(7462),r=n(3366),a=(n(7294),n(3905)),i=["components"],l={sidebar_position:9},c="Trello Notifications",s={unversionedId:"aws-recipes/trello-notifications",id:"aws-recipes/trello-notifications",isDocsHomePage:!1,title:"Trello Notifications",description:"Integrate your SNS notifications into Trello via a Node.js Lambda function.",source:"@site/docs/aws-recipes/trello-notifications.md",sourceDirName:"aws-recipes",slug:"/aws-recipes/trello-notifications",permalink:"/ops-cookbook/docs/aws-recipes/trello-notifications",editUrl:"https://github.com/madetech/ops-cookbook/edit/main/docs/aws-recipes/trello-notifications.md",tags:[],version:"current",sidebarPosition:9,frontMatter:{sidebar_position:9},sidebar:"tutorialSidebar",previous:{title:"SNS Notifications",permalink:"/ops-cookbook/docs/aws-recipes/sns-notifications"},next:{title:"Health Checks",permalink:"/ops-cookbook/docs/aws-recipes/health-check"}},p=[{value:"Terraform",id:"terraform",children:[]},{value:"Lambda",id:"lambda",children:[]}],u={toc:p};function d(e){var t=e.components,l=(0,r.Z)(e,i);return(0,a.kt)("wrapper",(0,o.Z)({},u,l,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"trello-notifications"},"Trello Notifications"),(0,a.kt)("p",null,"Integrate your SNS notifications into Trello via a Node.js Lambda function."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Trello Notification",src:n(5377).Z})),(0,a.kt)("h2",{id:"terraform"},"Terraform"),(0,a.kt)("p",null,"The following Terraform creates a Lambda function and subscribes it to an SNS topic."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'resource "aws_iam_role" "iam_for_lambda" {\n  name = "${terraform.workspace}-iam_for_lambda"\n\n  assume_role_policy = <<EOF\n{\n  "Version": "2012-10-17",\n  "Statement": [\n    {\n      "Action": "sts:AssumeRole",\n      "Principal": {\n        "Service": "lambda.amazonaws.com"\n      },\n      "Effect": "Allow",\n      "Sid": ""\n    }\n  ]\n}\nEOF\n}\n\nresource "aws_lambda_function" "notify_trello_lambda" {\n  filename      = "trello-lambda/src/trello-lambda.zip"\n  function_name = "${terraform.workspace}-notify-trello"\n  role          = aws_iam_role.iam_for_lambda.arn\n  handler       = "index.handler"\n\n  source_code_hash = filebase64sha256("trello-lambda/src/trello-lambda.zip")\n\n  runtime = "nodejs12.x"\n\n  environment {\n    variables = {\n      trelloToken  = var.trello_token\n      trelloApiKey = var.trello_api_key\n      trelloListId = var.trello_list_id\n    }\n  }\n}\n\nresource "aws_lambda_permission" "with_sns_technical_alerts" {\n  statement_id  = "AllowExecutionFromSNSTechnicalAlerts"\n  action        = "lambda:InvokeFunction"\n  function_name = aws_lambda_function.notify_trello_lambda.arn\n  principal     = "sns.amazonaws.com"\n  source_arn    = aws_sns_topic.sns_technical_alerts.arn\n}\n\nresource "aws_sns_topic_subscription" "sns_technical_alerts_lambda_subscription" {\n  topic_arn = aws_sns_topic.sns_technical_alerts.arn\n  protocol  = "lambda"\n  endpoint  = aws_lambda_function.notify_trello_lambda.arn\n}\n')),(0,a.kt)("h2",{id:"lambda"},"Lambda"),(0,a.kt)("p",null,"The Lambda is delivered to AWS within a zip and can be edited, built and tested from the AWS console."),(0,a.kt)("p",null,"I've included an ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/struds/ops-cookbook/blob/main/example-code/trello-notifications/trello-lambda/trello-test-data.json"},"example")," of a JSON CloudWatch Alert delivered via SNS which can be used as a test data within the AWS console."),(0,a.kt)("p",null,"However to develop the Lambda function i've included a self contained project with using the Jest test framework which mocks out the trello API allowing local development without deployment."),(0,a.kt)("p",null,"This ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/struds/ops-cookbook/blob/main/example-code/trello-notifications/trello-lambda/README.md"},"README")," below has instructions on how to build and run the Lambda locally but also how to integrate with Trello and deploy into AWS."))}d.isMDXComponent=!0},5377:function(e,t,n){t.Z=n.p+"assets/images/trello-notification-e9d03f27e6cb357abd79fb8c520de172.png"}}]);