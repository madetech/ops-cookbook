"use strict";(self.webpackChunkops_cookbook=self.webpackChunkops_cookbook||[]).push([[408],{3905:function(e,r,n){n.d(r,{Zo:function(){return l},kt:function(){return d}});var t=n(7294);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function o(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?o(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function s(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=t.createContext({}),c=function(e){var r=t.useContext(p),n=r;return e&&(n="function"==typeof e?e(r):i(i({},r),e)),n},l=function(e){var r=c(e.components);return t.createElement(p.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},m=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),m=c(n),d=a,_=m["".concat(p,".").concat(d)]||m[d]||u[d]||o;return n?t.createElement(_,i(i({ref:r},l),{},{components:n})):t.createElement(_,i({ref:r},l))}));function d(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var p in r)hasOwnProperty.call(r,p)&&(s[p]=r[p]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8249:function(e,r,n){n.r(r),n.d(r,{frontMatter:function(){return s},contentTitle:function(){return p},metadata:function(){return c},toc:function(){return l},default:function(){return m}});var t=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],s={sidebar_position:4},p="ECS with Fargate",c={unversionedId:"aws-recipes/ecs",id:"aws-recipes/ecs",isDocsHomePage:!1,title:"ECS with Fargate",description:"Takes a Docker image (this will be your application) and deploys into a Fargate managed ECS cluster.",source:"@site/docs/aws-recipes/ecs.md",sourceDirName:"aws-recipes",slug:"/aws-recipes/ecs",permalink:"/docs/aws-recipes/ecs",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/aws-recipes/ecs.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"RDS",permalink:"/docs/aws-recipes/rds"},next:{title:"Tags",permalink:"/docs/aws-recipes/tags"}},l=[{value:"Set the environment variables",id:"set-the-environment-variables",children:[]},{value:"Set the secrets",id:"set-the-secrets",children:[]},{value:"Set the Terraform variables",id:"set-the-terraform-variables",children:[]},{value:"Set up ECS",id:"set-up-ecs",children:[]},{value:"Set the variables per environment",id:"set-the-variables-per-environment",children:[]}],u={toc:l};function m(e){var r=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,t.Z)({},u,n,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"ecs-with-fargate"},"ECS with Fargate"),(0,o.kt)("p",null,"Takes a Docker image (this will be your application) and deploys into a ",(0,o.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/AWS_Fargate.html"},"Fargate managed ECS cluster"),"."),(0,o.kt)("h2",{id:"set-the-environment-variables"},"Set the environment variables"),(0,o.kt)("p",null,"These can built in the terraform e.g:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'{\n   name : "ALERT_EMAIL",\n   value : var.alert_email\n}\n')),(0,o.kt)("h2",{id:"set-the-secrets"},"Set the secrets"),(0,o.kt)("p",null,"In this example secrets are pulled out of the AWS Secrets Manager service - they can be set directly in that service or managed elsewhere and built into the Terraform."),(0,o.kt)("p",null,"The Secrets Manager Service can also be described as Terraform e.g."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'resource "aws_secretsmanager_secret" "db_password" {\n  name = "${terraform.workspace}_db_password"\n}\n\nresource "aws_secretsmanager_secret_version" "db_password" {\n  secret_id     = aws_secretsmanager_secret.db_password.id\n  secret_string = var.db_password\n}\n')),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"If following the above example ensure you do not commit a secret value into source control via production.tfvars"),(0,o.kt)("p",{parentName:"div"},"One solution is to manage secrets in GitHub Secrets and substitute them via a workflow action during deploy e.g:"),(0,o.kt)("pre",{parentName:"div"},(0,o.kt)("code",{parentName:"pre"},"    - name: Terraform Deploy\n        env:\n          TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}\n        run: terraform apply -auto-approve -var-file=production.tfvars -var-file=production.images.tfvars\n")))),(0,o.kt)("h2",{id:"set-the-terraform-variables"},"Set the Terraform variables"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'#\xa0See docs: https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html\nvariable "ecs_fargate_version" {\n  type        = string\n  description = "The version of fargate to run the ECS tasks on"\n}\nvariable "webapp_image" {\n  type        = string\n  description = "Docker image to run in the ECS cluster"\n  default     = "myservice-webapp"\n}\nvariable "webapp_image_tag" {\n  type        = string\n  description = "Name of the docker image to be deployed from the AWS ECR Repo"\n}\nvariable "webapp_port" {\n  type        = number\n  description = "Port exposed by the docker image to redirect traffic to for the Webapp"\n  default     = 3000\n}\nvariable "webapp_count" {\n  type        = number\n  description = "Number of docker containers to run for the Webapp"\n}\nvariable "webapp_health_check_path" {\n  type        = string\n  description = "Health check path used by the Application Load Balancer for the Webapp"\n  default     = "/api/health"\n}\n// See docs for ecs task definition: https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definition_parameters.html\nvariable "webapp_fargate_cpu" {\n  type        = number\n  description = "Fargate instance CPU units to provision (1 vCPU = 1024 CPU units) for the Webapp"\n}\nvariable "webapp_fargate_memory" {\n  type        = number\n  description = "Fargate instance memory to provision (in MiB) for the Webapp"\n}\n')),(0,o.kt)("h2",{id:"set-up-ecs"},"Set up ECS"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'data "aws_ecr_repository" "webapp" {\n  name = var.webapp_image\n}\n\nresource "aws_ecs_cluster" "main" {\n  name = "${terraform.workspace}-mca-myservice-cluster"\n}\n\nresource "aws_ecs_task_definition" "webapp" {\n  family                   = "${terraform.workspace}-myservice-webapp-task"\n  execution_role_arn       = aws_iam_role.ecs_task_execution_role.arn\n  network_mode             = "awsvpc"\n  requires_compatibilities = ["FARGATE"]\n  cpu                      = var.webapp_fargate_cpu\n  memory                   = var.webapp_fargate_memory\n  container_definitions = jsonencode([{\n    name : "myservice-webapp",\n    image : "${data.aws_ecr_repository.webapp.repository_url}:${var.webapp_image_tag}",\n    portMappings : [\n      {\n        containerPort : var.webapp_port\n        hostPort : var.webapp_port\n      }\n    ],\n    environment : [\n      {\n        name : "MY_ENV_1",\n        value : "some value"\n      },\n      {\n        name : "MY_ENV_2",\n        value : "some value"\n      }\n    ],\n    logConfiguration : {\n      "logDriver" : "awslogs",\n      "options" : {\n        "awslogs-group" : aws_cloudwatch_log_group.log_group.name,\n        "awslogs-region" : var.aws_region,\n        "awslogs-stream-prefix" : "webapp"\n      }\n    },\n    secrets : [\n      {\n        name : "MY_KEY",\n        valueFrom : aws_secretsmanager_secret.my_key.arn\n      }\n    ]\n  }])\n}\n\nresource "aws_ecs_service" "webapp" {\n  name                              = "${terraform.workspace}-myservice-webapp"\n  cluster                           = aws_ecs_cluster.main.id\n  task_definition                   = aws_ecs_task_definition.webapp.arn\n  desired_count                     = var.webapp_count\n  launch_type                       = "FARGATE"\n  platform_version                  = "1.4.0"\n  health_check_grace_period_seconds = 60\n\n  network_configuration {\n    security_groups = [aws_security_group.ecs_tasks.id]\n    subnets         = aws_subnet.app.*.id\n  }\n\n  load_balancer {\n    target_group_arn = aws_alb_target_group.webapp.id\n    container_name   = "myservice-webapp"\n    container_port   = var.webapp_port\n  }\n\n  service_registries {\n    registry_arn = aws_service_discovery_service.webapp.arn\n  }\n\n  depends_on = [aws_alb_listener.front_end, aws_iam_role_policy_attachment.ecs_task_execution_role]\n}\n')),(0,o.kt)("h2",{id:"set-the-variables-per-environment"},"Set the variables per environment"),(0,o.kt)("p",null,"Typically these would be in production.tfvars."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'ecs_fargate_version                     = "1.4.0"\nwebapp_count                            = 1\nwebapp_fargate_cpu                      = 256\nwebapp_fargate_memory                   = 512\nwebapp_image_tag                        = "8d7c..."\n')))}m.isMDXComponent=!0}}]);